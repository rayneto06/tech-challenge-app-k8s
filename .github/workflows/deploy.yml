name: Build, Test, and Push Docker Image

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build & Test Node + Inject DynamoDB Vars
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies & build
        run: |
          npm ci
          npm run build
        env:
          CUSTOMERS_TABLE: ${{ secrets.CUSTOMERS_TABLE }}
          PRODUCTS_TABLE: ${{ secrets.PRODUCTS_TABLE }}
          ORDERS_TABLE:   ${{ secrets.ORDERS_TABLE }}
          AWS_REGION:     ${{ secrets.AWS_REGION }}
          JWT_SECRET:     ${{ secrets.JWT_SECRET }}

  build-and-push-ecr:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    env:
      ECR_REPOSITORY: tech-challenge-app-k8s
      AWS_REGION:     ${{ secrets.AWS_REGION }}
      IMAGE_TAG:      latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}   # omit if you do not have a session token
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create ECR repo if not exists
        run: |
          aws ecr describe-repositories --repository-name $ECR_REPOSITORY \
            || aws ecr create-repository --repository-name $ECR_REPOSITORY

      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com"

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag for ECR
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG \
            "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Push to ECR
        run: |
          docker push "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG"
